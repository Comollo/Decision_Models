ggplot(data=ricavi_categoria, aes(x=ricavi_categoria$type, y = ricavi_categoria$ricavo_medio_unitario)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Ricavi per Categoria") +
labs(x="Categoria", y="Ricavo medio unitario") +
theme_classic()
ricavi_sezione = tot %>%
group_by(Section) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario))
ggplot(data=ricavi_sezione, aes(x=ricavi_sezione$Section, y = ricavi_sezione$ricavo_medio_unitario)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Ricavi per Sezione") +
labs(x="Sezione", y="Ricavo medio unitario") +
theme_classic()
tot %>%
group_by(tipo) %>%
summarise(n = n()) %>%
View()#14 categorie al massimo
tot %>%
group_by(Casino,Section, Month) %>%
summarise(n =n()) %>%
View()
tot %>% group_by(Casino, tipo, Section) %>%
summarise(n = n()) %>%
arrange(tipo, Section) %>%
group_by(Section) %>%
summarise(n = n()) %>%
View() #Modifica
tot %>% group_by(Casino, tipo, Section, Month) %>%
summarise(n = n()) %>%
arrange(tipo, Section) %>%
group_by(Section) %>%
summarise(n = n()) %>%
View()
tot %>% group_by(Casino, Section, Month) %>%
summarise(n = n()) %>%
arrange(Casino, Section) %>%
group_by(Casino, Section) %>%
summarise(Numero_medio_categorie = mean(n), Varianza_categorie = sqrt(var(n))) %>%
View()
tot %>% group_by(Casino, Section, Month) %>%
summarise(n = n()) %>%
arrange(Casino, Section) %>%
group_by(Month) %>%
summarise(Numero_medio_categorie = mean(n), Varianza_categorie = sqrt(var(n))) %>%
View() #Modifica?
set = tot %>%
filter(Month == ymd("2011-09-01")) %>%
arrange(Casino)
f_obj = round(set$ricavo_unitario) #ricavi unitari = da MAX
#quante macchine ci sono al mese nei 2 casino?
tot %>%
group_by(Casino, Month) %>%
summarise(n_macchine = sum(numero_macchine)) %>%
arrange(Month) %>%
View()
#costruzione vincolo
ai = c(ifelse(set$Casino == "Aries", 1, 0),
ifelse(set$Casino == "Libra", 1, 0))
A = matrix(ai,
2,
78,
byrow = T)#Matrice A del modello, 1 se valore attivo, 0 altrimenti
b = c(849, 230) #upper and lower bound
constraints = c("<=", "<=")
library(linprog)
sol <- solveLP(f_obj, b, A, maximum = TRUE, constraints)
summary(sol)
shadow_price = sol$con #solo con questo vincolo le macchine vengo piazzate dove il ricavo unitario è massimo
#la proporzione di macchine in ciascuna sezione deve essere tra la percentuale minima e quella massima
set %>%
group_by(Casino, Section) %>%
summarise(Num_macchine = sum(numero_macchine)) %>%
mutate(prop_per_mese = round(Num_macchine / sum(Num_macchine), 2)) %>%
View()#il mutate perde un livello dopo il summarise
section = unique(set$Section)
casino = unique(set$Casino)
a1 = c()
for (t in 1:2) {
for (i in 1:4) {
for (k in 1:2) {
a1 = append(a1, ifelse(set$Section == section[i] & set$Casino == casino[t], 1, 0))
}
}
}
A1 = matrix(a1,16,78, byrow = T)
A = rbind(A, A1)
b = c(849, 230, rep(c(round(0.2*849), round(0.3*849)), 4), rep(c(round(0.15*230), round(0.4*230)), 4))
constraints = c("<=", "<=", rep(c(">=", "<="), 8))
sol <- solveLP(f_obj, b, A, maximum = TRUE, constraints)
summary(sol)
shadow_price = sol$con
set %>%
group_by(Casino, tipo) %>%
summarise(n = n(), macchine = sum(numero_macchine)) %>%
View()
tipo = unique(set$tipo)
casino = unique(set$Casino)
a2 = c()
for (t in 1:2) {
for (i in 1:14) {
a2 = append(a2, ifelse(set$tipo == tipo[i] & set$Casino == casino[t], 1, 0))
}
}
A2 = matrix(a2,28,78, byrow = T) #dovrebbe esserci una riga di tutti 0; presumo sia la 14 perchè in aries ci sono 13 e non 14 categorie
#check
all(rep(0,78) == A2[14,0]) #yes -> da rimuovere
#c'è un errore nella costruzione della matrice A2 -> forse no proviamo!
A2 = A2[c(1:13,15:28),]
A = rbind(A, A2)
b = c(849, 230, #vincoli 1
rep(c(round(0.2*849), round(0.3*849)), 4), rep(c(round(0.15*230), round(0.4*230)), 4), #vincoli 2
rep(1,27)) #vincoli 3
constraints = c("<=", "<=",
rep(c(">=", "<="), 8),
rep(">=", 27))
sol <- solveLP(f_obj, b, A, maximum = TRUE, constraints)
summary(sol)
shadow_price = sol$con
x = set[which(sol$solution != 0),] #soluzione sul dataset!
View(x)
sol$solution
summary(sol)
sol$maximum
sol$maxiter
sol$allvar
summary(sol)
29683294 - sum(set$ricavi_totali)
sum(set$ricavi_totali)
29683294 - 10697443
set %>%
group_by(Casino, tipo) %>%
summarise(n = n(), macchine = sum(numero_macchine)) %>%
View()
View(sol)
set %>%
group_by(Casino, tipo) %>%
summarise(n = n(), macchine = sum(numero_macchine)) %>%
View()
b = c(849, 230, #vincoli 1
rep(c(round(0.2*849), round(0.3*849)), 4), rep(c(round(0.15*230), round(0.4*230)), 4), #vincoli 2
rep(10,27)) #vincoli 3
b = c(849, 230, #vincoli 1
rep(c(round(0.2*849), round(0.3*849)), 4), rep(c(round(0.15*230), round(0.4*230)), 4), #vincoli 2
rep(10,27)) #vincoli 3
b = c(849, 230, #vincoli 1
rep(c(round(0.2*849), round(0.3*849)), 4), rep(c(round(0.15*230), round(0.4*230)), 4), #vincoli 2
rep(1,27)) #vincoli 3
b = c(849, 230, #vincoli 1
rep(c(round(0.2*849), round(0.3*849)), 4), rep(c(round(0.15*230), round(0.4*230)), 4), #vincoli 2
rep(10,27)) #vincoli 3
b = c(849, 230, #vincoli 1
rep(c(round(0.2*849), round(0.3*849)), 4), rep(c(round(0.15*230), round(0.4*230)), 4), #vincoli 2
rep(10,27)) #vincoli 3
b
set %>%
group_by(Casino, tipo) %>%
summarise(n = n(), macchine = sum(numero_macchine)) %>%
View()
b = c(849, 230, #vincoli 1
rep(c(round(0.2*849), round(0.3*849)), 4), rep(c(round(0.15*230), round(0.4*230)), 4), #vincoli 2
rep(10,27)) #vincoli 3
constraints = c("<=", "<=",
rep(c(">=", "<="), 8),
rep(">=", 27))
sol <- solveLP(f_obj, b, A, maximum = TRUE, constraints)
summary(sol)
shadow_price = sol$con
x = set[which(sol$solution != 0),] #soluzione sul dataset!
View(x)
View(x)
x = set[which(sol$solution != 0),] %>%
arrange(Casino, tipo)#soluzione sul dataset!
x = set[which(sol$solution != 0),] %>%
arrange(Casino, tipo)#soluzione sul dataset!
length(sol$solution != 0)
sol$solution
sol$solution != 0
x = set[which(sol$solution != 0),] %>%
arrange(Casino, tipo) #soluzione sul dataset!
b = c(849, 230, #vincoli 1
rep(c(round(0.2*849), round(0.3*849)), 4), rep(c(round(0.15*230), round(0.4*230)), 4), #vincoli 2
rep(1,27)) #vincoli 3
constraints = c("<=", "<=",
rep(c(">=", "<="), 8),
rep(">=", 27))
constraints = c("<=", "<=",
rep(c(">=", "<="), 8),
rep(">=", 27))
sol <- solveLP(f_obj, b, A, maximum = TRUE, constraints)
#la proporzione di macchine in ciascuna sezione deve essere tra la percentuale minima e quella massima
set %>%
group_by(Casino, Section) %>%
summarise(Num_macchine = sum(numero_macchine)) %>%
mutate(prop_per_mese = round(Num_macchine / sum(Num_macchine), 2)) %>%
View()#il mutate perde un livello dopo il summarise
sol <- solveLP(f_obj, b, A, maximum = TRUE, constraints)
summary(sol)
shadow_price = sol$con
x = set[which(sol$solution != 0),] %>%
arrange(Casino, tipo) #soluzione sul dataset!
set %>%
group_by(Casino, tipo) %>%
summarise(n = n(), macchine = sum(numero_macchine)) %>%
View()
View(set)
library(plotly)
warnings()
View(ricavi_categoria)
View(ricavi_mese)
View(ricavi_sezione)
View(ricavi_sezione)
View(ricavi_sezione)
View(ricavi_mese)
View(ricavi_categoria)
p <- plot_ly(y = set$giocate_unitarie, type = "box", boxpoints = "all", jitter = 0.3,
pointpos = -1.8)
p
warnings()
View(set)
p <- plot_ly(y = set$giocate_unitarie, type = "box", boxpoints = "all", jitter = 0.3,
pointpos = -1.8, name = "giocate unitarie")
p
p <- plot_ly(y = set$giocate_unitarie, type = "box", boxpoints = "all", jitter = 0.3,
pointpos = -1.8, name = "Giocate Unitarie")
p
p <- plot_ly(y = set$giocate_unitarie, type = "box", boxpoints = "all", jitter = 0.3,
pointpos = -1.8, name = "Giocate Unitarie")
View(set)
#la proporzione di macchine in ciascuna sezione deve essere tra la percentuale minima e quella massima
set %>%
group_by(Casino, Section) %>%
summarise(Num_macchine = sum(numero_macchine)) %>%
mutate(prop_per_mese = round(Num_macchine / sum(Num_macchine), 2)) %>%
View()#il mutate perde un livello dopo il summarise
set = tot %>%
filter(Month == ymd("2011-09-01")) %>%
arrange(Casino)
p <- plot_ly(y = set$giocate_unitarie, type = "box", boxpoints = "all", jitter = 0.3,
pointpos = -1.8, name = "Giocate Unitarie")
p
p <- plot_ly(y = set$giocate_unitarie, type = "hist", name = "Giocate Unitarie")
warnings()
p
p <- plot_ly(y = set$giocate_unitarie, type = "histogram", name = "Giocate Unitarie")
p
p <- plot_ly(y = set$giocate_unitarie, type = "box", boxpoints = "all", jitter = 0.3,
pointpos = -1.8, name = "Giocate Unitarie")
p
set
View(ricavi_categoria)
View(ricavi_mese)
View(ricavi_sezione)
View(set)
View(shadow_price)
View(slot)
View(tot)
View(x)
View(set)
tot = slot %>%
group_by(Casino, Denomination, MachineType, Section, Month) %>%
summarise(numero_macchine = sum(NoMachines),
ricavi_totali = sum(GrossRevenue),
ricavo_unitario = ricavi_totali/numero_macchine,
giocate_totali = sum(Plays),
giocate_unitarie = round(giocate_totali/numero_macchine),
ricavo_per_giocata = ricavi_totali/giocate_totali) %>%
arrange(Month, Section, MachineType, Denomination) %>%
mutate(tipo = paste0(MachineType, "_", Denomination))
ricavi_mese = tot %>%
group_by(Month) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario),
numero_macchine_medie = mean(numero_macchine),
varianza_macchine = sqrt(var(numero_macchine)))
ggplot(data=ricavi_mese, aes(x=ricavi_mese$Month, y = ricavi_mese$ricavo_medio_unitario)) +
geom_line(alpha=.5, size=1, color="#880011") +
ggtitle("Ricavi per Mese") +
labs(x="Mese", y="Ricavo medio unitario") +
theme_classic() #non è un andamento lineare!
ricavi_mese$Month = as.factor(ricavi_mese$Month)
ggplot(data=ricavi_mese, aes(x=ricavi_mese$numero_macchine_medie,
y=ricavi_mese$ricavo_medio_unitario,
colour = Month)) +
geom_point(alpha=.4, size=4) +
ggtitle("Ricavi e Numero macchine mensili") +
labs(x="Numero medio macchine", y="Ricavi medi unitari") +
theme_minimal()
ricavi_categoria = tot %>%
group_by(Denomination, MachineType) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario)) %>%
mutate(type = paste0(Denomination,sep = "_", MachineType))
ricavi_categoria = tot %>%
group_by(Denomination, MachineType) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario)) %>%
mutate(type = paste0(Denomination,sep = "_", MachineType))
tot = slot %>%
group_by(Casino, Denomination, MachineType, Section, Month) %>%
summarise(numero_macchine = sum(NoMachines),
ricavi_totali = sum(GrossRevenue),
ricavo_unitario = ricavi_totali/numero_macchine,
giocate_totali = sum(Plays),
giocate_unitarie = round(giocate_totali/numero_macchine),
ricavo_per_giocata = ricavi_totali/giocate_totali) %>%
arrange(Month, Section, MachineType, Denomination) %>%
mutate(tipo = paste0(MachineType, "_", Denomination))
ricavi_mese = tot %>%
group_by(Month) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario),
numero_macchine_medie = mean(numero_macchine),
varianza_macchine = sqrt(var(numero_macchine)))
ggplot(data=ricavi_mese, aes(x=ricavi_mese$Month, y = ricavi_mese$ricavo_medio_unitario)) +
geom_line(alpha=.5, size=1, color="#880011") +
ggtitle("Ricavi per Mese") +
labs(x="Mese", y="Ricavo medio unitario") +
theme_classic() #non è un andamento lineare!
ricavi_mese$Month = as.factor(ricavi_mese$Month)
ggplot(data=ricavi_mese, aes(x=ricavi_mese$numero_macchine_medie,
y=ricavi_mese$ricavo_medio_unitario,
colour = Month)) +
geom_point(alpha=.4, size=4) +
ggtitle("Ricavi e Numero macchine mensili") +
labs(x="Numero medio macchine", y="Ricavi medi unitari") +
theme_minimal()
ricavi_categoria = tot %>%
group_by(Denomination, MachineType) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario)) %>%
mutate(type = paste0(Denomination,sep = "_", MachineType))
ggplot(data=ricavi_categoria, aes(x=ricavi_categoria$type, y = ricavi_categoria$ricavo_medio_unitario)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Ricavi per Categoria") +
labs(x="Categoria", y="Ricavo medio unitario") +
theme_classic()
ricavi_sezione = tot %>%
group_by(Section) %>%
summarise(ricavo_medio_unitario = mean(ricavo_unitario))
ggplot(data=ricavi_sezione, aes(x=ricavi_sezione$Section, y = ricavi_sezione$ricavo_medio_unitario)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Ricavi per Sezione") +
labs(x="Sezione", y="Ricavo medio unitario") +
theme_classic()
tot %>%
group_by(tipo) %>%
summarise(n = n()) %>%
View()#14 categorie al massimo
set = tot %>%
filter(Month == ymd("2011-09-01")) %>%
arrange(Casino)
#quante macchine ci sono al mese nei 2 casino?
tot %>%
group_by(Casino, Month) %>%
summarise(n_macchine = sum(numero_macchine)) %>%
arrange(Month) %>%
View()
#la proporzione di macchine in ciascuna sezione deve essere tra la percentuale minima e quella massima
set %>%
group_by(Casino, Section) %>%
summarise(Num_macchine = sum(numero_macchine)) %>%
mutate(prop_per_mese = round(Num_macchine / sum(Num_macchine), 2)) %>%
View()#il mutate perde un livello dopo il summarise
195/849
set %>%
group_by(Casino, tipo) %>%
summarise(n = n(), macchine = sum(numero_macchine)) %>%
View()
library(plotly)
p <- plot_ly(y = set$giocate_unitarie, type = "box", boxpoints = "all", jitter = 0.3,
pointpos = -1.8, name = "Giocate Unitarie")
p
ggplot(data=ricavi_sezione, aes(x=ricavi_sezione$Section, y = ricavi_sezione$ricavo_medio_unitario)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Ricavi per Sezione") +
labs(x="Sezione", y="Ricavo medio unitario") +
theme_classic()
ggplot(data=set, aes(x=set$giocate_unitarie, y = set$numero_macchine)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Giocate unitarie per numero di macchine") +
labs(x="Giocate Unitarie", y="Numero di Macchine") +
theme_classic()
ggplot(data=set, aes(x=set$giocate_totali, y = set$numero_macchine)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Giocate unitarie per numero di macchine") +
labs(x="Giocate Unitarie", y="Numero di Macchine") +
theme_classic()
ggplot(data=set, aes(x=set$giocate_totali, y = set$numero_macchine)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Giocate unitarie per numero di macchine") +
labs(x="Giocate Totali", y="Numero di Macchine") +
theme_classic()
ggplot(data=set, aes(x=set$giocate_totali, y = set$numero_macchine)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("") +
labs(x="Giocate Totali", y="Numero di Macchine") +
theme_classic()
ggplot(data=set, aes(x=set$giocate_totali, y = set$numero_macchine)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Più macchine ci sono più si gioca!") +
labs(x="Giocate Totali", y="Numero di Macchine") +
theme_classic()
warnings()
f_obj = round(set$ricavo_per_giocata) #ricavi unitari = da MAX
sol <- solveLP(f_obj, b, A, maximum = TRUE, constraints)
summary(sol)
summary(sol)
shadow_price = sol$con
x = set[which(sol$solution != 0),] %>%
arrange(Casino, tipo) #soluzione sul dataset!
View(x)
sum(sol$solution * set$giocate_unitarie)
p
ggplot(data=set, aes(x=set$giocate_totali, y = set$Denomination)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Più macchine ci sono più si gioca!") +
labs(x="Giocate Totali", y="Numero di Macchine") +
theme_classic()
ggplot(data=set, aes(x=set$giocate_unitarie, y = set$Denomination)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Più macchine ci sono più si gioca!") +
labs(x="Giocate Totali", y="Numero di Macchine") +
theme_classic()
ggplot(data=set, aes(x= set$Denomination, y=set$giocate_unitarie)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("") +
labs(x="Wage minimo", y="giocate unitarie") +
theme_classic()
ggplot(data=set, aes(x= set$Denomination, y=set$giocate_unitarie)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Più monete piccole puoi inserire più giochi?") +
labs(x="Wage minimo", y="giocate unitarie") +
theme_classic() #no
ggplot(data=set, aes(x=set$giocate_totali, y = set$numero_macchine)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Più macchine ci sono più si gioca? si") +
labs(x="Giocate Totali", y="Numero di Macchine") +
theme_classic() #si
ggplot(data=set, aes(x= set$Denomination, y=set$giocate_unitarie)) +
geom_point(alpha=.5, size=3, color="#880011") +
ggtitle("Più monete piccole puoi inserire più giochi? No!") +
labs(x="Wage minimo", y="giocate unitarie") +
theme_classic() #no
unique(set$Denomination)
p
p <- plot_ly(y = set[set$Casino == "Aries", giocate_unitarie], type = "box", boxpoints = "all", jitter = 0.3,
pointpos = -1.8, name = "Giocate Unitarie")
p
set[set$Casino == "Aries", giocate_unitarie]
set[set$Casino == "Aries", "giocate_unitarie"]
p <- plot_ly(y = set[set$Casino == "Aries", "giocate_unitarie"], type = "box", boxpoints = "all", jitter = 0.3,
pointpos = -1.8, name = "Giocate Unitarie")
p
set[set$Casino == "Aries", "giocate_unitarie"]
set[set$Casino == "Aries", "giocate_unitarie"]$giocate_unitarie
p <- plot_ly(y = set[set$Casino == "Aries", "giocate_unitarie"]$giocate_unitarie,
type = "box", boxpoints = "all",
jitter = 0.3,
pointpos = -1.8, name = "Giocate Unitarie")
p
summary(set$giocate_unitarie)
summary(set[set$Casino == "Aries", "giocate_unitarie"])
set$Casino = as.factor(set$Casino)
summary(set)
warnings()
set = as.data.frame(set)
set = as.data.frame(set)
tot = as.data.frame(tot)
set = tot %>%
filter(Month == ymd("2011-09-01")) %>%
arrange(Casino)
set = as.data.frame(set)
warnings()
summary(set$giocate_unitarie)
summary(set[set$Casino == "Aries", "giocate_unitarie"])
set$Casino = as.factor(set$Casino)
ggplot(set, aes(x=Casino, y=giocate_unitarie)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4)
ggplot(set, aes(x=Casino, y=giocate_unitarie, fill = Casino)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4) +
theme_dark()
ggplot(set, aes(x=Casino, y=giocate_unitarie, fill = Casino)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4) +
labs(y = "Giocate unitarie") +
theme_dark()
ggplot(set, aes(x=Casino, y=giocate_unitarie, fill = Casino)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4) +
labs(y = "Giocate unitarie") +
geom_jitter(shape=16, position=position_jitter(0.2)) +
theme_dark()
ggplot(set, aes(x=Casino, y=giocate_unitarie, fill = Casino)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4) +
labs(y = "Giocate unitarie") +
ggtitle("Distribuzioni giocate unitarie")
geom_jitter(shape=16, position=position_jitter(0.2)) +
theme_dark()
ggplot(set, aes(x=Casino, y=giocate_unitarie, fill = Casino)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4) +
labs(y = "Giocate unitarie") +
ggtitle("Distribuzioni giocate unitarie") +
geom_jitter(shape=16, position=position_jitter(0.2)) +
theme_dark()
ggplot(set, aes(x=Casino, y=giocate_unitarie, fill = Casino)) +
geom_boxplot(outlier.colour="red", outlier.shape=8,
outlier.size=4) +
labs(y = "Giocate unitarie") +
ggtitle("Distribuzione giocate unitarie") +
geom_jitter(shape=16, position=position_jitter(0.2)) +
theme_dark()
summary(set[set$Casino == "Aries", "giocate_unitarie"])
summary(set[set$Casino == "Libra", "giocate_unitarie"])
